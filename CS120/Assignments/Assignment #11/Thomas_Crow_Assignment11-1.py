#   Assignment #11 Question #1
#
#   Thomas Crow
#   Date 11/07/2021
#
#   Requirements: The Syracuse sequence is generated by starting with a natural
#                 number and repeatedly applying the following function until
#                 reaching 1:
#
#                           
#                   syr(x) = { x/2 if x is even 
#                            { 3x + 1 if x is odd
#
#                 For example, the Syracuse sequence starting with 5 is: 5,16,8,4,2,1.
#                 Write a program that gets a starting value from the user and
#                 then prints the Syracuse sequence for that starting value.

##################################################################################################################
#  Description: Apply the Syracuse sequence to a natural number 
#  Input: A natural number as integer
#  Output: A Syracuse sequence of numbers as an Integer list

def runSyracuse(naturalNumber):

    syracuseList = []

    syracuseList.append(naturalNumber)

    while (naturalNumber > 1):
        if (naturalNumber % 2) == 0:
            naturalNumber = int(naturalNumber / 2)
        else:
            naturalNumber = 3 * naturalNumber + 1
        syracuseList.append(naturalNumber)
    return syracuseList

##################################################################################################################

##################################################################################################################
#  Description: Obtains a number from user, determines if it's a valid natural number
#  Input: None
#  Output: Integer value of a natural number
#          Boolean value if number is valid          
# 

def obtainValidNumber():
    userNum = eval(input("Please enter a natural number greater than or equal to one: "))
#   Check to see if number is positive
    if (userNum < 0):
        print(f"{userNum} is negative number.")
        return userNum, False
    if (userNum == 0):
        print(f"Please enter a number greater than zero")
        return userNum, False
#   If a float is entered:
#   If the float a whole number, convert to int 
#   Otherwise print that the number is not a whole number
    if isinstance(userNum, float):
        if (userNum.is_integer()):
            userNum = int(userNum)
        else:
            print(f"{userNum} is not a whole number.")
            return userNum, False
#   If number is a valid integer return True
    return userNum, True
##################################################################################################################

def main():
    
    SyracuseSequence = []
    validinput = False
    while validinput == False:
        userNumber, validinput = obtainValidNumber()
    SyracuseSequence = runSyracuse(userNumber)
    print (SyracuseSequence)


main()
